{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mac/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react/cjs/react.production.min\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n        image: props.meetupData.image,\n        title: props.meetupData.title,\n        address: props.meetupData.address,\n        description: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/mac/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","Fragment","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,gCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,QAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,QAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,QAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAbQN,a;;AAkET,eAAeA,aAAf","sourcesContent":["import Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react/cjs/react.production.min\";\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <Head>\n        <MeetupDetail\n          image={props.meetupData.image}\n          title={props.meetupData.title}\n          address={props.meetupData.address}\n          description={props.meetupData.description}\n        />\n      </Head>\n    </Fragment>\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://JigarP:66666666@cluster0.imuzbor.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://JigarP:66666666@cluster0.imuzbor.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n      },\n    },\n    revalidate: 1,\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}